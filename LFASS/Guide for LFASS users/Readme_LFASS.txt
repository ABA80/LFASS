% USER MANUAL FOR THE PACKAGE FITFOLDER% Goal: This package analyses in bulk a series of fluorescence time-lapse datasets hosted in a single folder. The analysis consists in querying the user for key parameters and then automatically identifying data rows, fitting sigmoidal curves onto normalised smoothened data and extracting the times of half-maximum fluorescence. It returns the half-maximum time both from raw data and from the fitted curve. It then enters the results in a .txt table. Where the fit does not converge, the user is prompted to perform a user guided analysis if the data are deemed exploitable upon visual inspection. The software then updates the result table. In the result table, a value 1 or NaN (NotANumber in Matlab language) identifies a data row that was not fitted.



% Prerequisites:

The program is written for .xlsx data files with well fluorescence values over time organized in rows and row tags on the same row. It requires Matlab. It can be translated into Octave but the sigmoidal fit function will need to be rewritten.% Quick start: - Open Matlab, and place the folder containing your data files inside the folder called 'fitfolder'; - On the Matlab path, place yourself in the folder 'fitfolder' provided and execute the main programm by writing on the Matlab console: fitfolder- you will be prompted to answer questions before starting the analysis. Acceptable answers are integers, Y (yes) or N (no)Note : The programm first asks you if you wish to exclude noisy datas from the analysis. If the maximum of a data series is below the specified value, then the program will skip its analysis and jump to the next data row. You will then be asked later if you would have liked to add this data to the analysis, and eventually to perform a user-guided fit.You are also asked if you wish to plot the results (raw and fitted data). Note that if you select this option, all raws will be displayed, which will consume some analysis time if you have a few hundreds or thousands rows to analyse in bulk.% Short description of the functions provided :- fitfolder is the main program, which returns a .txt result table from a folder of .xlsx fluorescence time-lapse datasets.To execute it, enter: fitfolder
- user_fitc is a function that can be used to analyse a single row within a single dataset. 

- fitctag is similar, but the row is called through its tag. 

- fitc is identical to user_fitc within the main program fitfolder (faster performance). To execute, enter: 
user_fitc( filename, num_line, amp_limit_down, amp_limit_up, period, plotting, plot_original, left_interval_min, right_interval_min, left_interval_max, right_interval_max, interval1, interval2 )    * filename is the name of the file not including file extension, within the folder in which you are located. Example: if you wish to call "file.xlsx" within the folder "filefolder”, place yourself in   the folder "fitfolder", then enter: filename = 'filefolder/file.xlsx'    * num_line is the number of the row in the target dataset    * period is the time interval between two columns    * for plotting, enter ‘Y’ if you wish to plot the fitted data, else enter ’N’;    * for plot_original, enter ’Y’ if you wish to plot the raw data, else enter ’N’;    
    * left and right refer to the position of the threshold chosen on the time axis. Hence, left_interval_min (lef_interval_max) and right_interval_min (right_interval_max) define the time interval within which the minimum (maximum) of the fluorescence burst should be found. 
    * the last attributes are optional thresholds to further restrict the fitted region. 
- isnoise is a function that determines if a given row in a given dataset will be interpreted as noise or not (this is useful to check if the noise threshold chosen is either too stringent or not enough). To execute, refer to the description in the function file.- user_basicfunc is a function that can be used to find the half-maximum time directly from the raw data. basicfunc is its equivalent within the main program fitfolder. To execute, enter: 
user_basicfunc( filename, num_line, period, plot_original, left_interval_min, right_interval_min, left_interval_max, right_interval_max )
    * the attributes are the same as for user_fit (see above).- modelfunc is a sigmoid function based on the Matlab sigmoid fit function. To execute, refer to the description in the function file.- testfit is a function that estimates if a given row can be fitted by modelfunc. To execute, refer to the description in the function file.- plotal is a program that plots a single row within a single dataset of the working folder. To execute, enter: plotal. When the name of the file is asked, it is the name of the file, extension included, within the folder you are already placed in (if you have a file called "file.xlsx" in the folder "filefolder" where you are located, then you need to enter: filefolder/file.xlsx )- plotalc is a programm that plots all the rows of a given dataset. To execute, enter: plotalc. regarding the entry of the file name, refer to plotal above.

- analyse.m and analyses.m are stand-alone functions that allow for quick comparisons of fit performance on a subset of data. They are useful to determine the user-given parameters required to calibrate the program.